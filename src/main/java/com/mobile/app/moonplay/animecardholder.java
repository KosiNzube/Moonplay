package com.mobile.app.moonplay;import android.content.Context;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.ImageView;import android.widget.RelativeLayout;import android.widget.TextView;import com.bumptech.glide.Glide;import java.util.List;import androidx.annotation.NonNull;import androidx.recyclerview.widget.RecyclerView;public class animecardholder extends RecyclerView.Adapter<animecardholder.MyViewHolder>  {    private Context context;    private List<animecard> itemDataList;    public animecardholder(Context context, List<animecard> itemDataList) {        this.context = context;        this.itemDataList = itemDataList;    }    @NonNull    @Override    public MyViewHolder onCreateViewHolder(@NonNull ViewGroup viewGroup, int i) {        View view= LayoutInflater.from(context).inflate(R.layout.lexo,viewGroup,false);        return new MyViewHolder(view);    }    @Override    public void onBindViewHolder(@NonNull MyViewHolder myViewHolder, final int i) {        if (itemDataList.get(i).getType().length() > 90) {            myViewHolder.des.setText(itemDataList.get(i).getType().substring(0, 90) + "...");        } else {            myViewHolder.des.setText(itemDataList.get(i).getStart_date());        }       // myViewHolder.des.setText(itemDataList.get(i).getDescription());        myViewHolder.txt_item_title.setText(itemDataList.get(i).getTitle());        //myViewHolder.des.setText(itemDataList.get(i).getDescription());        myViewHolder.genre.setText(itemDataList.get(i).getType());        try{            Glide.with(context)                    .load(itemDataList.get(i).getImage_url())                    .centerCrop()                    .into(myViewHolder.img_item);            // myViewHolder.genre.setVisibility(View.INVISIBLE);            //myViewHolder.txt_item_title.setVisibility(View.INVISIBLE);        }catch (OutOfMemoryError error){            error.printStackTrace();        }        myViewHolder.card.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {            }        });        myViewHolder.card.setOnLongClickListener(new View.OnLongClickListener() {            @Override            public boolean onLongClick(View v) {                return true;            }        });    }    @Override    public int getItemCount() {        if (itemDataList.size()<20){            return itemDataList.size();        }else        if (itemDataList.size()>0) {            return 20;        }        return itemDataList.size();    }    @Override    public long getItemId(int position) {        return position;    }    public class MyViewHolder extends RecyclerView.ViewHolder {        TextView txt_item_title,genre,des,watch;        ImageView img_item,io;        RelativeLayout card;        public MyViewHolder(@NonNull View itemView) {            super(itemView);            txt_item_title=itemView.findViewById(R.id.tvTitle);            img_item=itemView.findViewById(R.id.itemImage);            des=itemView.findViewById(R.id.typee);            watch=itemView.findViewById(R.id.watch);            card=itemView.findViewById(R.id.card);            genre=itemView.findViewById(R.id.type);        }    }}