package com.mobile.app.moonplay;import android.content.Context;import android.content.Intent;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.ImageView;import android.widget.RelativeLayout;import android.widget.TextView;import android.widget.Toast;import com.bumptech.glide.Glide;import java.util.List;import androidx.annotation.NonNull;import androidx.recyclerview.widget.RecyclerView;import static com.mobile.app.moonplay.comments.arrayList;public class popular11 extends RecyclerView.Adapter<RecyclerView.ViewHolder> {    private Context context;    private List<Movie> mRecyclerViewItems;    private static final int MENU_ITEM_VIEW_TYPE = 0;    // The unified native ad view type.    private static final int UNIFIED_NATIVE_AD_VIEW_TYPE = 1;    public popular11(Context context, List<Movie> mRecyclerViewItems) {        this.context = context;        this.mRecyclerViewItems = mRecyclerViewItems;    }    @NonNull    @Override    public RecyclerView.ViewHolder onCreateViewHolder(@NonNull ViewGroup viewGroup, int viewType) {                View view = LayoutInflater.from(context).inflate(R.layout.lexo, viewGroup, false);                return new MyViewHolder(view);        }    @Override    public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int position) {                MyViewHolder myViewHolder= (MyViewHolder) holder;                Movie x=(Movie) mRecyclerViewItems.get(position);                if (x.getDescription().length() > 120) {                    myViewHolder.des.setText(x.getDescription().substring(0, 120) + "...");                } else {                    myViewHolder.des.setText(x.getDescription());                }                myViewHolder.des.setText(x.getDescription());                myViewHolder.txt_item_title.setText(x.getName());                //myViewHolder.des.setText(itemDataList.get(i).getDescription());                myViewHolder.genre.setText(x.getGenre());                try{                    Glide.with(context)                            .load(x.getImage())                            .centerCrop()                            .into(myViewHolder.img_item);                    // myViewHolder.genre.setVisibility(View.INVISIBLE);                    //myViewHolder.txt_item_title.setVisibility(View.INVISIBLE);                }catch (OutOfMemoryError error){                    error.printStackTrace();                }                myViewHolder.card.setOnClickListener(new View.OnClickListener() {                    @Override                    public void onClick(View v) {                        Intent intent = new Intent(context, comments.class);                        intent.putExtra("image", x.getImage());                        intent.putExtra("genre",x.getGenre());                        intent.putExtra("name",x.getName());                        intent.putExtra("video",x.getVideo());                        intent.putExtra("dex",x.getDescription());                        intent.putExtra("mb",x.getMb());                        intent.putExtra("type",x.getType());                        intent.putExtra("res",x.getResolution());                        intent.putExtra("upl",x.getUploader());                        context.startActivity(intent);                    }                });                myViewHolder.watch.setOnClickListener(new View.OnClickListener() {                    @Override                    public void onClick(View v) {                        if (!arrayList.contains(x.getName())) {                            arrayList.add(x.getName());                            Toast.makeText(context, "Added", Toast.LENGTH_SHORT).show();                        }                    }                });                myViewHolder.card.setOnLongClickListener(new View.OnLongClickListener() {                    @Override                    public boolean onLongClick(View v) {                        return true;                    }                });        }    @Override    public int getItemCount() {        if (mRecyclerViewItems.size()<1){            return mRecyclerViewItems.size();        }else        if (mRecyclerViewItems.size()>0) {            return 1;        }        return mRecyclerViewItems.size();    }    public class MyViewHolder extends RecyclerView.ViewHolder {        TextView txt_item_title,genre,des,watch;        ImageView img_item,io;        RelativeLayout card;        public MyViewHolder(@NonNull View itemView) {            super(itemView);            txt_item_title=itemView.findViewById(R.id.tvTitle);            img_item=itemView.findViewById(R.id.itemImage);            des=itemView.findViewById(R.id.typee);            watch=itemView.findViewById(R.id.watch);            card=itemView.findViewById(R.id.card);            genre=itemView.findViewById(R.id.type);        }    }}